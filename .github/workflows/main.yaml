name: Release

on:
  # whenever on push tags
  push:
    tags:
      - "*"

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  REGISTRY: europe-north1-docker.pkg.dev # https://cloud.google.com/artifact-registry/docs/repositories/repo-locations
  REPOSITORY: test-repo
  BRANCH: ${{ github.ref_name }} # this now gets tags instead of branches

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
    environment: yap

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Use GCP-GitHub Actions API"
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@v2

      - name: "Use gcloud CLI"
        run: gcloud info

      - name: "Use Artifact Registry instead of Docker Hub"
        run: gcloud --quiet auth configure-docker $REGISTRY
        env:
          REGISTRY: europe-north1-docker.pkg.dev

      - name: "Get GKE credentials"
        uses: "google-github-actions/get-gke-credentials@v2"
        with:
          cluster_name: "${{ env.GKE_CLUSTER }}"
          project_id: "${{ env.PROJECT_ID }}"
          location: "${{ env.GKE_ZONE }}"

      - name: "Set image names"
        run: |
          echo "CRON_TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY/cron:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV
          echo "API_TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY/api:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV
          echo "STATIC_TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY/static:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV

      - name: "Build"
        run: |
          docker build -f ./simple_http/gen.Dockerfile --tag $CRON_TAG ./simple_http
          docker build -f ./simple_http/api.Dockerfile --tag $API_TAG ./simple_http
          docker build -f ./simple_http/static.Dockerfile --tag $STATIC_TAG ./simple_http

      - name: "Publish"
        run: |
          docker push $CRON_TAG
          docker push $API_TAG
          docker push $STATIC_TAG

      - name: "Set up Kustomize"
        uses: imranismail/setup-kustomize@v2.1.0

      - name: Deploy
        run: |
          cd simple_http
          kustomize edit set image \
            cron=$CRON_TAG \
            api=$API_TAG \
            static=$STATIC_TAG \
            postgres=postgres:13 \
            redis=redis:7

          kustomize build . | kubectl apply -f -
          kubectl rollout status statefulset -n project simple-http-stset
          kubectl get services -o wide
